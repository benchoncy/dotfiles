#!/usr/bin/env bash
# Adapted from ThePrimeagen (https://github.com/ThePrimeagen/.dotfiles)
# Manages tmux sessions named by ticket/task number by default

if [[ $# -eq 1 ]]; then
    session_name=$1
else
    # if no session name, get ticket number
    session_options=""
    # if jira cli is installed, get tickets assigned to user
    if [[ -x $(command -v jira) ]]; then
        session_options+=$(jira issue list \
            -q 'assignee = currentUser() AND resolution = Unresolved AND project IS NOT EMPTY' \
            --plain \
            --no-headers \
            --columns key,summary 2> /dev/null)
        session_options+="\n"
    fi
    # add tmux sessions to options
    tmux_sessions=$(tmux list-sessions -F "#S|tmux session - #{session_windows} windows, created: #{t:session_created}#{?session_attached, (attached),}" 2> /dev/null)
    while read session; do
        name=$(echo $session | cut -d'|' -f1)
        description=$(echo $session | cut -d'|' -f2)
        session_options+=$(printf "%-16s%s" "$name" "$description")
        session_options+="\n"
    done <<< $(echo "$tmux_sessions")
    session_options=$(printf "$session_options" | sort -k 1 | uniq)
    session_name=$(fzf --prompt="Session > " \
        --header="Note: selecting a ticket with an existing session will open that session." \
        --print-query <<< $session_options | awk '{print $1}' | tail -1 | xargs echo)
fi

if [[ -z $session_name ]]; then
    exit 0
fi

tmux_running=$(pgrep tmux)

# if not in a tmux session, create one
if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $session_name
    exit 0
fi

# if in a tmux session, create one and switch to it; if it doesn't exist
if ! tmux has-session -t=$session_name 2> /dev/null; then
    tmux new-session -ds $session_name
    tmux-windowizer -s $session_name
    # Remove default window
    tmux kill-window -t $session_name:1
fi

tmux switch-client -t $session_name
